version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: rescue-net-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rescue_net
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: rescue-net-api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    volumes:
      - api-uploads:/app/uploads
    ports:
      - '3000:3000'
    networks:
      - rescue-net-network

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: rescue-net-web
    restart: unless-stopped
    depends_on:
      api:
        condition: service_started
    env_file:
      - ./.env
    environment:
      - NEXT_PUBLIC_API_URL=http://api:3000
      - NEXT_PUBLIC_VAPID_KEY=${NEXT_PUBLIC_VAPID_KEY}
    ports:
      - '3001:3000'
    networks:
      - rescue-net-network

volumes:
  postgres-data:
  api-uploads:

networks:
  rescue-net-network:
    driver: bridge
